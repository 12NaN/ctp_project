{"ast":null,"code":"var _jsxFileName = \"/Users/Luna23/Documents/CUNY Tech Prep/master-project/ctp_project/client/src/components/RoomList.js\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\n\nconst RoomList = props => {\n  const rooms = props.rooms,\n        currentRoom = props.currentRoom,\n        connectToRoom = props.connectToRoom,\n        currentUser = props.currentUser;\n  const roomList = rooms.map(room => {\n    const roomIcon = !room.isPrivate ? 'üåê' : 'üîí';\n    const isRoomActive = room.id === currentRoom.id ? 'active' : '';\n    return React.createElement(\"li\", {\n      className: isRoomActive,\n      key: room.id,\n      onClick: () => connectToRoom(room.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"room-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, roomIcon), room.customData && room.customData.isDirectMessage ? React.createElement(\"span\", {\n      className: \"room-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, room.customData.userIds.filter(id => id !== currentUser.id)[0]) : React.createElement(\"span\", {\n      className: \"room-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, room.name));\n  });\n  return React.createElement(\"div\", {\n    className: \"rooms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"chat-rooms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, roomList));\n};\n\nRoomList.propTypes = {\n  rooms: Proptypes.array.isRequired,\n  currentRoom: Proptypes.object.isRequired,\n  connectToRoom: Proptypes.func.isRequired,\n  currentUser: Proptypes.object.isRequired\n};\nexport default RoomList;","map":{"version":3,"sources":["/Users/Luna23/Documents/CUNY Tech Prep/master-project/ctp_project/client/src/components/RoomList.js"],"names":["React","Proptypes","RoomList","props","rooms","currentRoom","connectToRoom","currentUser","roomList","map","room","roomIcon","isPrivate","isRoomActive","id","customData","isDirectMessage","userIds","filter","name","propTypes","array","isRequired","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA,QACdC,KADc,GACqCD,KADrC,CACdC,KADc;AAAA,QACPC,WADO,GACqCF,KADrC,CACPE,WADO;AAAA,QACMC,aADN,GACqCH,KADrC,CACMG,aADN;AAAA,QACqBC,WADrB,GACqCJ,KADrC,CACqBI,WADrB;AAEtB,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AAC/B,UAAMC,QAAQ,GAAG,CAACD,IAAI,CAACE,SAAN,GAAkB,IAAlB,GAAyB,IAA1C;AACA,UAAMC,YAAY,GAAGH,IAAI,CAACI,EAAL,KAAYT,WAAW,CAACS,EAAxB,GAA6B,QAA7B,GAAwC,EAA7D;AAEA,WACI;AACI,MAAA,SAAS,EAAED,YADf;AAEI,MAAA,GAAG,EAAEH,IAAI,CAACI,EAFd;AAGI,MAAA,OAAO,EAAE,MAAMR,aAAa,CAACI,IAAI,CAACI,EAAN,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,QAA7B,CALJ,EAMKD,IAAI,CAACK,UAAL,IAAmBL,IAAI,CAACK,UAAL,CAAgBC,eAAnC,GACG;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IAAI,CAACK,UAAL,CAAgBE,OAAhB,CAAwBC,MAAxB,CAA+BJ,EAAE,IAAIA,EAAE,KAAKP,WAAW,CAACO,EAAxD,EAA4D,CAA5D,CADL,CADH,GAKO;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BJ,IAAI,CAACS,IAAlC,CAXZ,CADJ;AAgBH,GApBgB,CAAjB;AAqBA,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,QAA5B,CADJ,CADJ;AAKH,CA5BD;;AA8BAN,QAAQ,CAACkB,SAAT,GAAqB;AACjBhB,EAAAA,KAAK,EAAEH,SAAS,CAACoB,KAAV,CAAgBC,UADN;AAEjBjB,EAAAA,WAAW,EAAEJ,SAAS,CAACsB,MAAV,CAAiBD,UAFb;AAGjBhB,EAAAA,aAAa,EAAEL,SAAS,CAACuB,IAAV,CAAeF,UAHb;AAIjBf,EAAAA,WAAW,EAAEN,SAAS,CAACsB,MAAV,CAAiBD;AAJb,CAArB;AAOA,eAAepB,QAAf","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst RoomList = props => {\r\n    const { rooms, currentRoom, connectToRoom, currentUser } = props;\r\n    const roomList = rooms.map(room => {\r\n        const roomIcon = !room.isPrivate ? 'üåê' : 'üîí';\r\n        const isRoomActive = room.id === currentRoom.id ? 'active' : '';\r\n\r\n        return (\r\n            <li\r\n                className={isRoomActive}\r\n                key={room.id}\r\n                onClick={() => connectToRoom(room.id)}\r\n            >\r\n                <span className=\"room-icon\">{roomIcon}</span>\r\n                {room.customData && room.customData.isDirectMessage ? (\r\n                    <span className=\"room-name\">\r\n                        {room.customData.userIds.filter(id => id !== currentUser.id)[0]}\r\n                    </span>\r\n                ) : (\r\n                        <span className=\"room-name\">{room.name}</span>\r\n                    )}\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"rooms\">\r\n            <ul className=\"chat-rooms\">{roomList}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nRoomList.propTypes = {\r\n    rooms: Proptypes.array.isRequired,\r\n    currentRoom: Proptypes.object.isRequired,\r\n    connectToRoom: Proptypes.func.isRequired,\r\n    currentUser: Proptypes.object.isRequired,\r\n};\r\n\r\nexport default RoomList;"]},"metadata":{},"sourceType":"module"}