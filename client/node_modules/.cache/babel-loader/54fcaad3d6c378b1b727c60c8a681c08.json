{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Luna23/Documents/CUNY Tech Prep/master-project/ctp_project/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Luna23/Documents/CUNY Tech Prep/master-project/ctp_project/client/src/components/UserBio.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items:center;\\n\\theight: 60vh;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nconst UserBio_Wrapper = styled.div(_templateObject());\nconst initialState = {\n  fullName: '',\n  message: '',\n  messageError: '',\n  recommendation: '',\n  traveledTo: '',\n  wishListCities: '',\n  sucesss: false,\n  error: false\n};\nexport default class UserBio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let messageError = '';\n\n      if (!this.state.message) {\n        messageError = \"Message cannot be blank\";\n      }\n\n      if (messageError) {\n        this.setState({\n          messageError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(event);\n        const data = this.state;\n        fetch(\"/api/auth/userbio\", {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            fullName: this.props.yourName,\n            message: data.message,\n            recommendation: data.recommendation,\n            traveledTo: data.traveledTo,\n            wishListCities: data.wishListCities\n          })\n        }).then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          throw new Error('Content validation');\n        }).then(post => {\n          this.setState({\n            success: true\n          });\n        }).catch(err => {\n          this.setState({\n            error: true\n          });\n          console.log(err);\n        });\n        console.log('User bio in data is: ', data);\n        this.setState(initialState);\n      }\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      fullName: '',\n      message: '',\n      messageError: '',\n      recommendation: '',\n      traveledTo: '',\n      wishListCities: '',\n      sucesss: false,\n      error: false\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          fullName = _this$state.fullName,\n          message = _this$state.message,\n          recommendation = _this$state.recommendation,\n          traveledTo = _this$state.traveledTo,\n          wishListCities = _this$state.wishListCities;\n    const yourName = this.props.fullName;\n    return (//Card style is in App.css\n      React.createElement(UserBio_Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"userbio-form\",\n        bg: \"dark\",\n        text: \"white\",\n        style: {\n          width: '50rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Enter details about yourself\")))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: e => this.handleSubmit(e),\n        className: \"formCentered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGroupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Enter a message: \", message), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Message\",\n        name: \"message\",\n        value: this.state.message,\n        onChange: e => this.handleInputChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(Form.Text, {\n        className: \"error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.messageError)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGroupRecommendation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Any recommendation? \", recommendation), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Recommendation\",\n        name: \"recommendation\",\n        value: this.state.recommendation,\n        onChange: e => this.handleInputChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formTraveledTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"What cities have you been to? \", traveledTo), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Traveled To\",\n        name: \"traveledTo\",\n        value: this.state.traveledTo,\n        onChange: e => this.handleInputChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formWishListCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"What cities do you want to go to? \", wishListCities), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Wish List Cities\",\n        name: \"wishListCities\",\n        value: this.state.wishListCities,\n        onChange: e => this.handleInputChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        readOnly: true,\n        defaultValue: yourName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        type: \"submit\",\n        onClick: e => this.handleSubmit(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Submit\"))))))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Luna23/Documents/CUNY Tech Prep/master-project/ctp_project/client/src/components/UserBio.js"],"names":["React","Form","Button","styled","Container","Row","Col","Card","UserBio_Wrapper","div","initialState","fullName","message","messageError","recommendation","traveledTo","wishListCities","sucesss","error","UserBio","Component","constructor","props","validate","state","setState","handleSubmit","event","preventDefault","isValid","console","log","data","fetch","method","credentials","headers","body","JSON","stringify","yourName","then","res","ok","json","Error","post","success","catch","err","handleInputChange","target","name","value","render","width","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button'\r\nimport styled from 'styled-components';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst UserBio_Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items:center;\r\n\theight: 60vh;\r\n`;\r\n\r\nconst initialState = {\r\n\tfullName: '',\r\n\tmessage: '',\r\n\tmessageError: '',\r\n\trecommendation: '',\r\n\ttraveledTo: '',\r\n\twishListCities: '',\r\n\tsucesss: false,\r\n\terror: false\r\n}\r\n\r\nexport default class UserBio extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullName: '',\r\n            message: '',\r\n            messageError: '',\r\n            recommendation: '',\r\n            traveledTo: '',\r\n            wishListCities: '',\r\n            sucesss: false,\r\n            error: false\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate = () => {\r\n\t\tlet messageError = '';\r\n\r\n\t\tif (!this.state.message) {\r\n\t\t\tmessageError = \"Message cannot be blank\";\r\n\t\t}\r\n\r\n\t\tif (messageError) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessageError\r\n\t\t\t});\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t\r\n\t// add if email == confirmEmail check\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst isValid = this.validate();\r\n\t\tif (isValid) {\r\n\r\n\t\tconsole.log(event);\r\n\r\n\t\tconst data = this.state;\r\n\r\n\t\tfetch(\"/api/auth/userbio\", {\r\n\t      method: 'POST',\r\n\t      credentials: 'include',\r\n\t      headers: {\r\n\t        'Content-Type': 'application/json'\r\n\t      },\r\n\t      body: JSON.stringify(\r\n\t      \t{fullName: (this.props.yourName),\r\n\t\t\t message: data.message,\r\n\t\t\t recommendation: data.recommendation,\r\n\t\t\t traveledTo: data.traveledTo,\r\n\t\t\t wishListCities: data.wishListCities,\r\n\t      \t}),\r\n\t    })\r\n\t      .then(res => {\r\n\t        if(res.ok) {\r\n\t          return res.json()\r\n\t        }\r\n\r\n\t        throw new Error('Content validation');\r\n\t      })\r\n\t      .then(post => {\r\n\t        this.setState({\r\n\t          success: true,\r\n\t        });\r\n\t      })\r\n\t      .catch(err => {\r\n\t        this.setState({\r\n\t          error: true,\r\n\t        });\r\n\r\n\t        console.log(err);\r\n\t      });\r\n\t      \t\r\n\t\t\tconsole.log('User bio in data is: ', data);\r\n\t\t\tthis.setState(initialState);\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t\r\n\t}\r\n\r\n\r\n\thandleInputChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst {fullName, message, recommendation, traveledTo, wishListCities} = this.state;\r\n\r\n\t\tconst yourName = this.props.fullName;\r\n\r\n\t\treturn(\r\n\t\t\t//Card style is in App.css\r\n\t\t<UserBio_Wrapper>\r\n\t\t\t<Card className=\"userbio-form\" bg=\"dark\" text=\"white\" style={{ width: '50rem' }}>\r\n\t\t\t<Card.Body>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row >\r\n\t\t\t\t\t<Col>\r\n            \t<Card.Title>Enter details about yourself</Card.Title>\r\n            \t\t</Col>\r\n            \t</Row>\r\n            </Container>\r\n            \t\r\n\t\t\t<Container>\r\n\t\t\t\r\n\t\t\t\t<Form onSubmit={(e) => this.handleSubmit(e)} className=\"formCentered\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formGroupMessage\">\r\n\t\t\t    \t\t\t<Form.Label>Enter a message: {message}</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control \r\n\t\t\t\t\t\t\t    type=\"text\" \r\n\t\t\t\t\t\t\t    placeholder=\"Message\" \r\n\t\t\t\t\t\t\t    name=\"message\" \r\n\t\t\t\t\t\t\t    value={this.state.message}\r\n\t\t\t\t\t\t\t    onChange={(e) => this.handleInputChange(e)} />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t  <Form.Text className=\"error-text\">{this.state.messageError}</Form.Text>\r\n\t\t\t\t\t\t </Col>\r\n\r\n\t\t\t\t\t\t <Col>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formGroupRecommendation\">\r\n\t\t\t    \t\t\t<Form.Label>Any recommendation? {recommendation}</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control \r\n\t\t\t\t\t\t\t    type=\"text\" \r\n\t\t\t\t\t\t\t    placeholder=\"Recommendation\" \r\n\t\t\t\t\t\t\t    name=\"recommendation\" \r\n\t\t\t\t\t\t\t    value={this.state.recommendation}\r\n\t\t\t\t\t\t\t    onChange={(e) => this.handleInputChange(e)} />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t </Col>\r\n\t\t\t \t\t</Row>\r\n\t\t\t \r\n\t\t\t \t\t<Row>\r\n\t\t\t \t\t\t<Col>\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formTraveledTo\">\r\n\t\t\t\t\t\t    <Form.Label>What cities have you been to? {traveledTo}</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control \r\n\t\t\t\t\t\t\t    type=\"text\" \r\n\t\t\t\t\t\t\t    placeholder=\"Traveled To\" \r\n\t\t\t\t\t\t\t    name=\"traveledTo\" \r\n\t\t\t\t\t\t\t    value={this.state.traveledTo}\r\n\t\t\t\t\t\t\t    onChange={(e) => this.handleInputChange(e)} />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t </Col>\r\n\r\n\t\t\t\t\t\t <Col>\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formWishListCities\">\r\n\t\t\t\t\t\t    <Form.Label>What cities do you want to go to? {wishListCities}</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control \r\n\t\t\t\t\t\t\t    type=\"text\" \r\n\t\t\t\t\t\t\t    placeholder=\"Wish List Cities\" \r\n\t\t\t\t\t\t\t    name=\"wishListCities\" \r\n\t\t\t\t\t\t\t    value={this.state.wishListCities}\r\n\t\t\t\t\t\t\t    onChange={(e) => this.handleInputChange(e)}/>\r\n\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t </Col>\r\n\t\t\t\t\t\r\n\t\t\t  \t\t</Row>\r\n\t\t\t\r\n\t\t\t  \t\t<Row>\r\n\r\n\t\t\t  \t\t  <Col>\r\n\t\t\t\t\t\t \t<Form.Group >\r\n\t\t\t\t\t\t    <Form.Label>Full Name</Form.Label>\r\n\t\t\t\t\t\t      <Form.Control type=\"text\" readOnly defaultValue={yourName} />\r\n\t\t\t\t\t\t   </Form.Group>\r\n\t\t\t\t\t\t </Col>\r\n\r\n\t\t\t\t\t\r\n\t\t\t  \t\t</Row>\r\n\t\t\t  \r\n\t\t\t  \t\t<Row>\r\n\t\t\t  \t\t\t<Col>\r\n\t\t\t\t\t\t  <Button variant=\"info\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>\r\n\t\t\t\t\t\t  Submit</Button>\r\n\t\t\t\t\t  \t</Col>\r\n\t\t\t\t\t </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t</Card.Body>\r\n        </Card>\r\n        </UserBio_Wrapper>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}